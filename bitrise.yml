---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: "*"
  pipeline: pipeline_main
- pull_request_source_branch: "*"
  pipeline: pipeline_main
- tag: "*"
  pipeline: pipeline_main
pipelines:
  pipeline_main:
    stages:
    - stage_ios_build: {}
    - stage_ios_parallel_tests: {}
stages:
  stage_ios_build:
    workflows:
    - ios_build: {}
  stage_ios_parallel_tests:
    workflows:
    - run_unit: {}
    - run_intergration: {}
    - run_uitests: {}
workflows:
  ios_build: 
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull: {}
    - cocoapods-install@2: {}
    - script@1.1:
        title: Build project
        inputs:
        - content: |
            mkdir "${BITRISE_SOURCE_DIR}/DerivedData"
            echo "${BITRISE_SOURCE_DIR}/DerivedData"
            
            IgnoreFileSystemDeviceInodeChanges=1 xcodebuild build-for-testing -workspace Notes.xcworkspace -scheme Notes -destination 'platform=iOS Simulator,OS=15.0,name=iPod touch (7th generation)' -showBuildTimingSummary -derivedDataPath "${BITRISE_SOURCE_DIR}/DerivedData" | xcbeautify
    - script@1.1:
        title: Compress Derived Data
        is_always_run: true
        inputs:
        - content: |
            set -euxo pipefail
            echo "-- compress --"
            echo "${BITRISE_SOURCE_DIR}/DerivedData"

            exec tar cfPp "${BITRISE_SOURCE_DIR}/DerivedData.tar" --format posix "${BITRISE_SOURCE_DIR}/DerivedData"
    - deploy-to-bitrise-io@2:
        inputs:
        - deploy_path: "${BITRISE_SOURCE_DIR}/DerivedData.tar"
    - cache-push: {}
  run_unit:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - git::https://github.com/bitrise-steplib/bitrise-step-artifact-pull.git@main:
        title: Pull artifacts
        inputs:
        - verbose: true
        - artifact_sources: ios_build.*
    - script@1.1:
        title: Unzip
        inputs:
        - content: |
            set -euxo pipefail

            echo "-- unzip -- "
            mkdir "${BITRISE_SOURCE_DIR}/DerivedData"

            echo "${BITRISE_ARTIFACT_PATHS}"
            tar xPpf "${BITRISE_ARTIFACT_PATHS}"
    - script@1.1:
        title: Test project
        inputs:
        - content: |
            IgnoreFileSystemDeviceInodeChanges=1 xcodebuild -workspace Notes.xcworkspace -scheme Notes -destination 'platform=iOS Simulator,OS=15.0,name=iPod touch (7th generation)' -derivedDataPath "${BITRISE_SOURCE_DIR}/DerivedData" -testPlan Notes_UnitTests -resultBundlePath "xcodebuild_unit.xcresult" -parallel-testing-enabled YES test-without-building | xcbeautify
    - deploy-to-bitrise-io@2: {}
  run_intergration:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - git::https://github.com/bitrise-steplib/bitrise-step-artifact-pull.git@main:
        title: Pull artifacts
        inputs:
        - verbose: true
        - artifact_sources: ios_build.*
    - script@1.1:
        title: Unzip
        inputs:
        - content: |
            set -euxo pipefail

            echo "-- unzip -- "
            mkdir "${BITRISE_SOURCE_DIR}/DerivedData"

            echo "${BITRISE_ARTIFACT_PATHS}"
            tar xvPpf "${BITRISE_ARTIFACT_PATHS}" 
    - script@1.1:
        title: Test project
        inputs:
        - content: |
            xcodebuild -workspace Notes.xcworkspace -scheme Notes -destination 'platform=iOS Simulator,OS=15.0,name=iPod touch (7th generation)' -derivedDataPath "${BITRISE_SOURCE_DIR}/DerivedData" -testPlan Notes_IntergrationTests -resultBundlePath "xcodebuild_intergation.xcresult" -parallel-testing-enabled YES test-without-building | xcbeautify
    - deploy-to-bitrise-io@2: {}
  run_uitests:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - git::https://github.com/bitrise-steplib/bitrise-step-artifact-pull.git@main:
        title: Pull artifacts
        inputs:
        - verbose: true
        - artifact_sources: ios_build.*
    - script@1.1:
        title: Unzip
        inputs:
        - content: |
            set -euxo pipefail

            echo "-- unzip -- "
            mkdir "${BITRISE_SOURCE_DIR}/DerivedData"
            
            echo "${BITRISE_ARTIFACT_PATHS}"
            tar xPpf "${BITRISE_ARTIFACT_PATHS}" 
    - script@1.1:
        title: Test project
        inputs:
        - content: |
            xcodebuild -workspace Notes.xcworkspace -scheme Notes -destination 'platform=iOS Simulator,OS=15.0,name=iPod touch (7th generation)' -derivedDataPath "${BITRISE_SOURCE_DIR}/DerivedData" -testPlan Notes_UITests -resultBundlePath "xcodebuild_ui.xcresult" -parallel-testing-enabled YES test-without-building | xcbeautify
    - deploy-to-bitrise-io@2: {}
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: Notes.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: Notes
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: development
meta:
  bitrise.io:
    stack: osx-xcode-13.1.x
    machine_type_id: standard
